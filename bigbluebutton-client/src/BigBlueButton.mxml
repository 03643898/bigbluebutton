<?xml version="1.0" encoding="utf-8"?>

<!--

BigBlueButton open source conferencing system - http://www.bigbluebutton.org/

Copyright (c) 2012 BigBlueButton Inc. and by respective authors (see below).

This program is free software; you can redistribute it and/or modify it under the
terms of the GNU Lesser General Public License as published by the Free Software
Foundation; either version 3.0 of the License, or (at your option) any later
version.

BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along
with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.

-->
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
                xmlns:views="*"
                pageTitle="BigBlueButton" 
                layout="absolute" 
                preloader="org.bigbluebutton.main.model.BigBlueButtonPreloader">

 
  <mx:Script>
    <![CDATA[
      
      private var request:URLRequest = new URLRequest();
      private var vars:URLVariables = new URLVariables();
      private var urlLoader:URLLoader;
      
      private function joinMeeting():void {
        trace("JOIN URL = " + joinURL.text);
        load(joinURL.text);  
      }
      
      private function displayClient():void {
        setCurrentState("displayBBBClient");
      }
      
      private function load(url:String) : void
      {
        var date:Date = new Date();
        trace("BBBMain:load(...) " + url);
        request = new URLRequest(url);
        request.method = URLRequestMethod.GET;
        
        urlLoader = new URLLoader();
        urlLoader.addEventListener(Event.COMPLETE, handleComplete);
        urlLoader.addEventListener(HTTPStatusEvent.HTTP_STATUS, httpStatusHandler);
        urlLoader.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
        urlLoader.load(request);	
      }
      
      private function httpStatusHandler(event:HTTPStatusEvent):void {
        trace("httpStatusHandler: " + event);
      }
      
      private function ioErrorHandler(event:IOErrorEvent):void {
        trace("ioErrorHandler: " + event);
      }
      
      private function handleComplete(e:Event):void {			
        var xml:XML = new XML(e.target.data)
        
        var returncode:String = xml.returncode;
        
        if (returncode == 'SUCCESS') {
          displayClient();
        }
      }
      
    ]]>
  </mx:Script>
 
  <mx:VBox id="main" width="100%" height="100%">
    <mx:HBox id="joinContainer" width="100%" height="30">
      <mx:Button id="joinBtn" label="Join" click="joinMeeting()"/>
      <mx:TextInput id="joinURL" width="90%"/>
    </mx:HBox>
  </mx:VBox>
  
  <mx:states>	    
    <mx:State name="displayBBBClient">   
      <mx:AddChild position="after" relativeTo="joinContainer">
        <views:BigBlueButtonMainPanel id="bbbShell" width="100%" height="100%"/>
      </mx:AddChild>
    </mx:State>
  </mx:states>

<!--
  <views:BigBlueButtonMainPanel id="bbbShell"/>
-->
  
</mx:Application>
